table
t <- table_data %>%
dplyr::select(-pronouns_binned, -gradeyear_binned, -ethnicity, -postcode_povertycoded)%>%
tbl_summary(
#by = fgd_participant_dummy,
type = type,
missing = "no",
statistic = statistics
)%>%
modify_header(
update = all_stat_cols() ~ ""
)%>%
add_n(
statistic = "{p_miss}",
col_label = "**Missing** (%)",
last = FALSE
) %>%
bold_labels()
t_cron <- table_cron %>%
tbl_summary(
type = everything()~ "continuous",
statistic = everything() ~ "{p0}"
)%>%
modify_header(
update = all_stat_cols() ~ NA
)%>%
modify_footnote(update = everything() ~ NA)
t_cron
t_cron <- table_cron %>%
tbl_summary(
type = everything()~ "continuous",
statistic = everything() ~ "{p0}"
)%>%
modify_header(
update = all_stat_cols() ~ ""
)%>%
modify_footnote(update = everything() ~ NA)
t_cron
t
t <- table_data %>%
dplyr::select(-pronouns_binned, -gradeyear_binned, -ethnicity, -postcode_povertycoded)%>%
tbl_summary(
#by = fgd_participant_dummy,
type = type,
missing = "no",
statistic = statistics
)%>%
modify_header(
update = all_stat_cols() ~ ""
)%>%
add_n(
statistic = "{p_miss}",
col_label = "**Missing** (%)",
last = FALSE
) %>%
bold_labels()%>%
modify_footnote(update = everything() ~ NA)
table <- tbl_merge(
tbls = list(t,t1,t2,t3,t4, t_cron),
tab_spanner = c("Overall", "Pronouns", "Educational Group", "Racialization", "Neighbourhood Poverty Rate", "Chronbach's Alpha")
) %>%
as_gt()
table
t <- table_data %>%
dplyr::select(-pronouns_binned, -gradeyear_binned, -ethnicity, -postcode_povertycoded)%>%
tbl_summary(
#by = fgd_participant_dummy,
type = type,
missing = "no",
statistic = statistics
)%>%
modify_header(
update = all_stat_cols() ~ "Overall"
)%>%
add_n(
statistic = "{p_miss}",
col_label = "**Missing** (%)",
last = FALSE
) %>%
bold_labels()%>%
modify_footnote(update = everything() ~ NA)
table <- tbl_merge(
tbls = list(t,t1,t2,t3,t4, t_cron),
tab_spanner = c("", "Pronouns", "Educational Group", "Racialization", "Neighbourhood Poverty Rate", "Chronbach's Alpha")
) %>%
as_gt()
table
t <- table_data %>%
dplyr::select(-pronouns_binned, -gradeyear_binned, -ethnicity, -postcode_povertycoded)%>%
tbl_summary(
#by = fgd_participant_dummy,
type = type,
missing = "no",
statistic = statistics
)%>%
modify_header(
update = all_stat_cols() ~ "**Overall**"
)%>%
add_n(
statistic = "{p_miss}",
col_label = "**Missing** (%)",
last = FALSE
) %>%
bold_labels()%>%
modify_footnote(update = everything() ~ NA)
table <- tbl_merge(
tbls = list(t,t1,t2,t3,t4, t_cron),
tab_spanner = c("", "Pronouns", "Educational Group", "Racialization", "Neighbourhood Poverty Rate", "Chronbach's Alpha")
) %>%
as_gt()
table
table <- tbl_merge(
tbls = list(t,t1,t2,t3,t4, t_cron),
tab_spanner = c("Summary", "Pronouns", "Educational Group", "Racialization", "Neighbourhood Poverty Rate", "Chronbach's Alpha")
) %>%
as_gt()
table
table <- tbl_merge(
tbls = list(t,t1,t2,t3,t4, t_cron),
tab_spanner = c("Summary", "Pronouns", "Educational Group", "Racialization", "Neighbourhood Poverty Rate", "Chronbach's $\alpha$")
) %>%
as_gt()
table
table <- tbl_merge(
tbls = list(t,t1,t2,t3,t4, t_cron),
tab_spanner = c("Summary", "Pronouns", "Educational Group", "Racialization", "Neighbourhood Poverty Rate", "Chronbach's \U03B1")
) %>%
as_gt()
table
table <- tbl_merge(
tbls = list(t,t1,t2,t3,t4, t_cron),
tab_spanner = c("Summary", "Pronouns", "Educational Group", "Racialization", "Neighbourhood Poverty Rate", "Chronbach's Î±")
) %>%
as_gt()
table
table <- tbl_merge(
tbls = list(t,t1,t2,t3,t4, t_cron),
tab_spanner = c("Summary", "Pronouns", "Educational Group", "Racialization", "Neighbourhood Poverty Rate", "Chronbach's Alpha ")
) %>%
as_gt()
table
gt::gtsave(table, here("results", "tableyy.pdf"))
gt::gtsave(table, here("results", "tableyy.pdf"))
createVars <- c("cookandbake", "visual_art", "playingmusic", "creativewriting")
scales <- list(chudVars, edinVars, workloadVars, physactVars, playVars, createVars, sleepVars, dietVars)
scalenames <- c("chud9_total", "edinborough_scale", "workload_scale", "physactivity_scale", "playscale", "creative_engagementscale", "sleepscale", "overall_dietqual")
output <- c("")
for (scale in scales) {
dat <- data %>%
select(all_of(scale))
cron <- cronbach.alpha(data = dat, standardized = FALSE, na.rm = TRUE)
output <- c(output, cron$alpha)
}
createVars <- c("cookandbake", "visualart", "playingmusic", "creativewriting")
scales <- list(chudVars, edinVars, workloadVars, physactVars, playVars, createVars, sleepVars, dietVars)
scalenames <- c("chud9_total", "edinborough_scale", "workload_scale", "physactivity_scale", "playscale", "creative_engagementscale", "sleepscale", "overall_dietqual")
output <- c("")
for (scale in scales) {
dat <- data %>%
select(all_of(scale))
cron <- cronbach.alpha(data = dat, standardized = FALSE, na.rm = TRUE)
output <- c(output, cron$alpha)
}
output <- output[-1]
table_cron <- data.frame(rbind(output))%>%
mutate_if(is.character, as.numeric)
colnames(table_cron) <- scalenames
table_cron <- table_cron%>%
labelled::set_variable_labels(
#change all variable labels to Title Case
.labels = snakecase::to_title_case(names(.), abbreviations = c("PA")),
sleepscale = "Sleep Quality",
playscale = "Leisure Activities",
creative_engagementscale = "Creative Engagement",
physactivity_scale = "Physical Activity",
overall_dietqual = "Diet Quality",
chud9_total = "Mental Distress",
edinborough_scale = "Resilience",
workload_scale = "Work Load"
)
str(table_cron)
t_cron <- table_cron %>%
tbl_summary(
type = everything()~ "continuous",
statistic = everything() ~ "{p0}"
)%>%
modify_header(
update = all_stat_cols() ~ ""
)%>%
modify_footnote(update = everything() ~ NA)
table <- tbl_merge(
tbls = list(t,t1,t2,t3,t4, t_cron),
tab_spanner = c("Summary", "Pronouns", "Educational Group", "Racialization", "Neighbourhood Poverty Rate", "Chronbach's Alpha ")
) %>%
as_gt()
gt::gtsave(table, here("results", "tableyy.pdf"))
knitr::opts_chunk$set(echo = TRUE)
library(ProjectTemplate)
#create.project(template = "minimal")
load.project()
select <- dplyr::select #prevent masking of select by other packages
set.seed(20220518)
ggplot2::theme_set(ggplot2::theme_bw())  # pre-set the bw theme.
theme_gtsummary_journal("nejm", set_theme = TRUE)
data <- read.csv(here::here("data", "cantec19_july2021norepeatsubmissions.csv"))
#skim(data)
data <- data %>%
mutate(gradeyear_binned = ifelse(gradeyear_binned == "highschool", "highschool", ifelse(gradeyear_binned == "postsec", "postsec", NA)),
postcode_povertycoded = fct_recode(postcode_povertycoded, "Med/High" = "High", "Med/High" = "Medium"),
postcode_povertycoded = factor(postcode_povertycoded, levels = c("Low", "Med/High")),
fgd_participant_dummy = factor(fgd_participant_dummy, levels = c("1", "0")),
timeline_binned = factor(timeline_binned, levels = c("fallwinter2020", "earlywinter2021", "laterwinter2021", "earlyspring2021", "latespring2021")),
date_submitted = lubridate::dmy(Date_submitted)
)
data %>%
mutate(weekly_responses = floor_date(
date_submitted,
unit = "week"
))%>%
#group_by(gradeyear_binned)%>%
#count(weekly_responses)
ggplot(aes(
x=weekly_responses,
fill=timeline_binned
))+
geom_histogram(binwidth = 2)+
facet_zoom(ylim = c(0,20))+
facet_wrap(~gradeyear_binned)
table_data <- data %>%
mutate(participant = TRUE,
ethnicity = ifelse(ethnicity == "white", "white", ifelse(is.na(ethnicity), NA, "not white")),
pronouns_binned = ifelse(is.na(pronouns_binned)|pronouns_binned == "missing"|pronouns_binned=="refused", NA,
ifelse(pronouns_binned == "he/him", "he/him", "she/her or NB"))
)%>%
dplyr::select(participant, pronouns_binned, gradeyear_binned, ethnicity, postcode_povertycoded, fgd_participant_dummy,
cantril_prepandemic, cantril_now, chud9_total, edinborough_scale, workload_scale, playscale, creative_engagementscale,
sleepscale, physactivity_scale, overall_dietqual)%>%
#filter(fgd_participant_dummy != "1")%>%
select(-fgd_participant_dummy)%>%
labelled::set_variable_labels(
#change all variable labels to Title Case
.labels = snakecase::to_title_case(names(.), abbreviations = c("PA")),
sleepscale = "Sleep Quality",
playscale = "Leisure Activities",
creative_engagementscale = "Creative Engagement",
physactivity_scale = "Physical Activity",
overall_dietqual = "Diet Quality",
participant = "n",
ethnicity = "Racialization",
postcode_povertycoded = "Neighbourhood Poverty Rate",
cantril_prepandemic = "Pre-pandemic Life Satisfaction",
cantril_now = "Current Life Satisfaction",
chud9_total = "Mental Distress",
edinborough_scale = "Resilience",
workload_scale = "Work Load"
)
listVars <- c("cantril_prepandemic", "cantril_now", "chud9_total", "edinborough_scale", "playscale", "sleepscale", "physactivity_scale", "overall_dietqual")
demoVars <- c("age", "gradeyear_binned", "pronouns_binned", "ethnicity", "postcode_povertycoded", "postcode_COVIDhotzones")
wellBeingVars <- c("sleephours_group", "dietqual_group", "chud_groups", "physactivity_yesterday_mins", "physactivitynow_vsprepandemic",
"personalcare_minutes", "personalcarenow_vsprepandemic", "socmed_freq")
chudVars <- c("worried", "sad", "pain", "tired", "annoyed", "candoschoolwork", "cansleep", "dailyroutine", "canjoinactivities")
edinVars <- c("optimistic", "useful", "relaxed", "dealingwellwproblems", "thinkingclearly", "closetoppl", "decisive")
workloadVars <- c("paidjob_freq_coded", "volunteering_freq_coded", "leadershipandactivism_freq_coded", "schoolwork_load_coded")
physactVars <- c("Payesterday_scale", "runwalkcycle_coded", "skate_coded", "gymandsports_coded", "danceandmartialarts_coded", "domesticlabour_coded")
playVars <- c("runwalkcycle_coded", "skate_coded", "gymandsports_coded", "danceandmartialarts_coded","singleplayergames_coded", "multiplayergames_coded", "hobbies", "gamesandpuzzles")
createVars <- c("cookandbake", "visualart", "playingmusic", "creativewriting")
sleepVars <- c("sleepscale1_lastnightbedtime", "sleepscale2_lastnightsleephours", "sleepscale3_usualweekdaybedtime", "sleepscale4_usualweekendbedtime", "sleepscale5_disruptedsleep", "sleepscale6_sleepquality", "sleepscale7_prepanvspansleep")
dietVars <- c("darkgreen_veg",	"colourfulrootveg",	"other_veg",	"citrusandberries",	"other_fruit",	"fullfat_dairy",	"reducedfat_dairy",	"eggs",	"veg_protein",	"seafood",	"processed_meat",	"other_meat",	"refined_grains",	"whole_grains",	"sweetbaked_goods",	"deepfriedfoods",	"ssbs",	"juiceandsmoothies")
scales <- list(chudVars, edinVars, workloadVars, physactVars, playVars, createVars, sleepVars, dietVars)
scalenames <- c("chud9_total", "edinborough_scale", "workload_scale", "physactivity_scale", "playscale", "creative_engagementscale", "sleepscale", "overall_dietqual")
output <- c("")
for (scale in scales) {
dat <- data %>%
select(all_of(scale))
cron <- cronbach.alpha(data = dat, standardized = FALSE, na.rm = TRUE)
output <- c(output, cron$alpha)
}
output <- output[-1]
table_cron <- data.frame(rbind(output))%>%
mutate_if(is.character, as.numeric)
colnames(table_cron) <- scalenames
table_cron <- table_cron%>%
labelled::set_variable_labels(
#change all variable labels to Title Case
.labels = snakecase::to_title_case(names(.), abbreviations = c("PA")),
sleepscale = "Sleep Quality",
playscale = "Leisure Activities",
creative_engagementscale = "Creative Engagement",
physactivity_scale = "Physical Activity",
overall_dietqual = "Diet Quality",
chud9_total = "Mental Distress",
edinborough_scale = "Resilience",
workload_scale = "Work Load"
)
str(table_cron)
cron
View(cron)
dat
View(dat)
knitr::opts_chunk$set(echo = TRUE)
library(ProjectTemplate)
#create.project(template = "minimal")
load.project()
select <- dplyr::select #prevent masking of select by other packages
set.seed(20220518)
ggplot2::theme_set(ggplot2::theme_bw())  # pre-set the bw theme.
theme_gtsummary_journal("nejm", set_theme = TRUE)
data <- read.csv(here::here("data", "cantec19_july2021norepeatsubmissions.csv"))
#skim(data)
data <- data %>%
mutate(gradeyear_binned = ifelse(gradeyear_binned == "highschool", "highschool", ifelse(gradeyear_binned == "postsec", "postsec", NA)),
postcode_povertycoded = fct_recode(postcode_povertycoded, "Med/High" = "High", "Med/High" = "Medium"),
postcode_povertycoded = factor(postcode_povertycoded, levels = c("Low", "Med/High")),
fgd_participant_dummy = factor(fgd_participant_dummy, levels = c("1", "0")),
timeline_binned = factor(timeline_binned, levels = c("fallwinter2020", "earlywinter2021", "laterwinter2021", "earlyspring2021", "latespring2021")),
date_submitted = lubridate::dmy(Date_submitted)
)
table_data <- data %>%
mutate(participant = TRUE,
ethnicity = ifelse(ethnicity == "white", "white", ifelse(is.na(ethnicity), NA, "not white")),
pronouns_binned = ifelse(is.na(pronouns_binned)|pronouns_binned == "missing"|pronouns_binned=="refused", NA,
ifelse(pronouns_binned == "he/him", "he/him", "she/her or NB"))
)%>%
dplyr::select(participant, pronouns_binned, gradeyear_binned, ethnicity, postcode_povertycoded, fgd_participant_dummy,
cantril_prepandemic, cantril_now, chud9_total, edinborough_scale, workload_scale, playscale, creative_engagementscale,
sleepscale, physactivity_scale, overall_dietqual)%>%
#filter(fgd_participant_dummy != "1")%>%
select(-fgd_participant_dummy)%>%
labelled::set_variable_labels(
#change all variable labels to Title Case
.labels = snakecase::to_title_case(names(.), abbreviations = c("PA")),
sleepscale = "Sleep Quality",
playscale = "Leisure Activities",
creative_engagementscale = "Creative Engagement",
physactivity_scale = "Physical Activity",
overall_dietqual = "Diet Quality",
participant = "n",
ethnicity = "Racialization",
postcode_povertycoded = "Neighbourhood Poverty Rate",
cantril_prepandemic = "Pre-pandemic Life Satisfaction",
cantril_now = "Current Life Satisfaction",
chud9_total = "Mental Distress",
edinborough_scale = "Resilience",
workload_scale = "Work Load"
)
listVars <- c("cantril_prepandemic", "cantril_now", "chud9_total", "edinborough_scale", "playscale", "sleepscale", "physactivity_scale", "overall_dietqual")
demoVars <- c("age", "gradeyear_binned", "pronouns_binned", "ethnicity", "postcode_povertycoded", "postcode_COVIDhotzones")
wellBeingVars <- c("sleephours_group", "dietqual_group", "chud_groups", "physactivity_yesterday_mins", "physactivitynow_vsprepandemic",
"personalcare_minutes", "personalcarenow_vsprepandemic", "socmed_freq")
chudVars <- c("worried", "sad", "pain", "tired", "annoyed", "candoschoolwork", "cansleep", "dailyroutine", "canjoinactivities")
edinVars <- c("optimistic", "useful", "relaxed", "dealingwellwproblems", "thinkingclearly", "closetoppl", "decisive")
workloadVars <- c("paidjob_freq_coded", "volunteering_freq_coded", "leadershipandactivism_freq_coded", "schoolwork_load_coded")
physactVars <- c("Payesterday_scale", "runwalkcycle_coded", "skate_coded", "gymandsports_coded", "danceandmartialarts_coded", "domesticlabour_coded")
playVars <- c("runwalkcycle_coded", "skate_coded", "gymandsports_coded", "danceandmartialarts_coded","singleplayergames_coded", "multiplayergames_coded", "hobbies", "gamesandpuzzles")
createVars <- c("cookandbake", "visualart", "playingmusic", "creativewriting")
sleepVars <- c("sleepscale1_lastnightbedtime", "sleepscale2_lastnightsleephours", "sleepscale3_usualweekdaybedtime", "sleepscale4_usualweekendbedtime", "sleepscale5_disruptedsleep", "sleepscale6_sleepquality", "sleepscale7_prepanvspansleep")
dietVars <- c("darkgreen_veg",	"colourfulrootveg",	"other_veg",	"citrusandberries",	"other_fruit",	"fullfat_dairy",	"reducedfat_dairy",	"eggs",	"veg_protein",	"seafood",	"processed_meat",	"other_meat",	"refined_grains",	"whole_grains",	"sweetbaked_goods",	"deepfriedfoods",	"ssbs",	"juiceandsmoothies")
scales <- list(chudVars, edinVars, workloadVars, physactVars, playVars, createVars, sleepVars, dietVars)
scalenames <- c("chud9_total", "edinborough_scale", "workload_scale", "physactivity_scale", "playscale", "creative_engagementscale", "sleepscale", "overall_dietqual")
output <- c("")
for (scale in scales) {
dat <- data %>%
select(all_of(scale))
cron <- cronbach.alpha(data = dat, standardized = FALSE, na.rm = TRUE)
output <- c(output, cron$alpha)
}
output <- output[-1]
table_cron <- data.frame(rbind(output))%>%
mutate_if(is.character, as.numeric)
colnames(table_cron) <- scalenames
table_cron <- table_cron%>%
labelled::set_variable_labels(
#change all variable labels to Title Case
.labels = snakecase::to_title_case(names(.), abbreviations = c("PA")),
sleepscale = "Sleep Quality",
playscale = "Leisure Activities",
creative_engagementscale = "Creative Engagement",
physactivity_scale = "Physical Activity",
overall_dietqual = "Diet Quality",
chud9_total = "Mental Distress",
edinborough_scale = "Resilience",
workload_scale = "Work Load"
)
str(table_cron)
#test variables for normal distribution
table_data %>%
shapiro_test(listVars)
tablexx <- data %>%
mutate(participant = TRUE)%>%
select(participant, fgd_participant_dummy, demoVars, wellBeingVars)%>%
tbl_summary(
by = fgd_participant_dummy,
missing = "no",
type = age ~ "continuous"
)%>%
add_overall()%>%
add_p(everything()~"kruskal.test")%>%
add_q()%>%
bold_p(t=0.05, q = TRUE)%>%
modify_header(p.value = "**p**", q.value = "**q**",
stat_by = "**{level}**")%>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Focus Group Participant**")%>%
as_gt()
gt::gtsave(tablesumm, here("results", "tablexx.pdf"))
tablexx
statistics <- c(participant ~ "{n}",
all_continuous() ~ "{median} ({p25}, {p75})"#,
#cantril_prepandemic ~ "{median} ({p25}, {p75})",
#cantril_now ~ "{median} ({p25}, {p75})",
#chud9_total ~ "{median} ({p25}, {p75})",
#edinborough_scale ~ "{median} ({p25}, {p75})",
#playscale ~ "{median} ({p25}, {p75})",
#creative_engagementscale ~ "{median} ({p25}, {p75})",
#sleepscale ~ "{median} ({p25}, {p75})",
#physactivity_scale ~ "{median} ({p25}, {p75})",
#overall_dietqual ~ "{median} ({p25}, {p75})"
)
type <- c(
workload_scale ~ "continuous",
cantril_prepandemic ~ "continuous",
cantril_now ~ "continuous"
)
data %>%
get_summary_stats(
cantril_prepandemic, cantril_now, chud9_total, edinborough_scale, playscale, sleepscale, physactivity_scale, overall_dietqual,
type = "common"
)
View(data)
data %>%
get_summary_stats(
cantril_prepandemic, cantril_now, chud9_total, edinborough_scale, playscale, sleepscale, physactivity_scale, overall_dietqual, lastnight_sleephours,
type = "common"
)
data %>%
get_summary_stats(
cantril_prepandemic, cantril_now, chud9_total, edinborough_scale, playscale, sleepscale, physactivity_scale, overall_dietqual, lastnight_sleephours,
type = "common"
)
data %>%
get_summary_stats(
cantril_prepandemic, cantril_now, chud9_total, edinborough_scale, playscale, sleepscale, physactivity_scale, overall_dietqual
type = "common"
data %>%
get_summary_stats(
cantril_prepandemic, cantril_now, chud9_total, edinborough_scale, playscale, sleepscale, physactivity_scale, overall_dietqual,
type = "common"
)
statistics <- c(participant ~ "{n}",
all_continuous() ~ "{median} ({p25}, {p75})"#,
#cantril_prepandemic ~ "{median} ({p25}, {p75})",
#cantril_now ~ "{median} ({p25}, {p75})",
#chud9_total ~ "{median} ({p25}, {p75})",
#edinborough_scale ~ "{median} ({p25}, {p75})",
#playscale ~ "{median} ({p25}, {p75})",
#creative_engagementscale ~ "{median} ({p25}, {p75})",
#sleepscale ~ "{median} ({p25}, {p75})",
#physactivity_scale ~ "{median} ({p25}, {p75})",
#overall_dietqual ~ "{median} ({p25}, {p75})"
)
type <- c(
workload_scale ~ "continuous",
cantril_prepandemic ~ "continuous",
cantril_now ~ "continuous"
)
data %>%
get_summary_stats(
cantril_prepandemic, cantril_now, chud9_total, edinborough_scale, playscale, sleepscale, physactivity_scale, overall_dietqual,
type = "common"
)
data%>%
filter(lastnight_sleephours < 8)%>%
n()
data%>%
filter(lastnight_sleephours < 8)%>%
count()
data%>%
filter(lastnight_sleephours < 8)%>%
count(responseID)
data %>%
filter(lastnight_sleephours < 8)%>%
count(response_id)
data %>%
#filter(lastnight_sleephours < 8)%>%
count(response_id)
data %>%
filter(lastnight_sleephours < 8)%>%
count(response_id)
data %>%
#filter(lastnight_sleephours < 8)%>%
count(response_id)
data %>%
filter(lastnight_sleephours >= 8)%>%
count(response_id)
data %>%
filter(lastnight_sleephours >0 )%>%
count(response_id)
data %>%
filter(lastnight_sleephours >=0 )%>%
count(response_id)
data %>%
#filter(lastnight_sleephours >=0 )%>%
summarize(lastnight_sleephours)
glimpse(data$screensnow_vsprepandemic)
summary(data$screensnow_vsprepandemic)
str(data$screensnow_vsprepandemic)
data$screensnow_vsprepandemic %>% summarize()
data %>%
get_summary_stats(
cantril_prepandemic, cantril_now, chud9_total, edinborough_scale, playscale, sleepscale, physactivity_scale, overall_dietqual,
type = "common"
)
prop.table(table(data$screensnow_vsprepandemic))
