dplyr::select(-participant, -pronouns_binned, -gradeyear_binned, -ethnicity, -postcode_povertycoded, -foodsec_totaldummy)%>%
colnames()
my_comparisons <- list(c("he/him", "she/her"), c("he/him", "NB/pan"), c("NB/pan", "she/her"))
for (x in variables) {
p <- table_data %>%
drop_na(pronouns_binned)%>%
ggplot()+
aes(
x = pronouns_binned,
y = cantril_prepandemic
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)
suppressWarnings(print(p))
}
variables <- table_data %>%
dplyr::select(-participant, -pronouns_binned, -gradeyear_binned, -ethnicity, -postcode_povertycoded, -foodsec_totaldummy)%>%
colnames()
my_comparisons <- list(c("he/him", "she/her"), c("he/him", "NB/pan"), c("NB/pan", "she/her"))
for (x in variables) {
p <- table_data %>%
drop_na(pronouns_binned)%>%
ggplot()+
aes(
x = pronouns_binned,
y = x
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)
suppressWarnings(print(p))
}
for (each in variables) {
p <- table_data %>%
drop_na(pronouns_binned)%>%
ggplot()+
aes(
x = pronouns_binned,
y = each
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)
suppressWarnings(print(p))
}
df <- table_data %>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")
View(df)
df <- table_data %>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)
variables <- table_data %>%
dplyr::select(-participant, -pronouns_binned, -gradeyear_binned, -ethnicity, -postcode_povertycoded, -foodsec_totaldummy)%>%
colnames()
my_comparisons <- list(c("he/him", "she/her"), c("he/him", "NB/pan"), c("NB/pan", "she/her"))
for (each in variables) {
df <- table_data %>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)
p <- df %>%
drop_na(pronouns_binned)%>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)
suppressWarnings(print(p))
}
variables <- table_data %>%
dplyr::select(-participant, -pronouns_binned, -gradeyear_binned, -ethnicity, -postcode_povertycoded, -foodsec_totaldummy)%>%
colnames()
my_comparisons <- list(c("he/him", "she/her"), c("he/him", "NB/pan"), c("NB/pan", "she/her"))
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)
p <- df %>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)+
labs(title = each)
suppressWarnings(print(p))
}
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)
p <- df %>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)+
labs(title = each)
plots(each) <- p
}
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)
p <- df %>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)+
labs(title = each)
plots[each] <- p
}
plots
p
plots[[each]] <- p
variables <- table_data %>%
dplyr::select(-participant, -pronouns_binned, -gradeyear_binned, -ethnicity, -postcode_povertycoded, -foodsec_totaldummy)%>%
colnames()
my_comparisons <- list(c("he/him", "she/her"), c("he/him", "NB/pan"), c("NB/pan", "she/her"))
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)
p <- df %>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)+
labs(title = each)
plots[[each]] <- p
}
plots
variables <- table_data %>%
dplyr::select(-participant, -pronouns_binned, -gradeyear_binned, -ethnicity, -postcode_povertycoded, -foodsec_totaldummy)%>%
colnames()
my_comparisons <- list(c("he/him", "she/her"), c("he/him", "NB/pan"), c("NB/pan", "she/her"))
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value)
p <- df %>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)+
labs(title = each)
plots[[each]] <- p
}
plots
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value)
p <- df %>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)+
labs(title = each)
plots[[each]] <- p
ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value)
p <- df %>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)+
labs(title = each) +
facet_wrap(postcode_povertycoded)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value)
p <- df %>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)+
labs(title = each) +
facet_wrap(~postcode_povertycoded)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value)
p <- df %>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)+
labs(title = each) +
facet_grid(gradeyear_binned~postcode_povertycoded)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value)
p <- df %>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)+
labs(title = each) +
facet_grid(ethnicity~postcode_povertycoded)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value)
p <- df %>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)+
labs(title = each) +
facet_grid(~ethnicity)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value)
p <- df %>%
ggplot()+
aes(
x = ethnicity,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
stat_compare_means(comparisons = my_comparisons)+
labs(title = each) +
facet_grid(~pronouns_binned)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value)
p <- df %>%
ggplot()+
aes(
x = ethnicity,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
#stat_compare_means(comparisons = my_comparisons)+
stat_compare_means()+
labs(title = each) +
facet_grid(~pronouns_binned)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value)
p <- df %>%
ggplot()+
aes(
x = postcode_povertycoded,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
#stat_compare_means(comparisons = my_comparisons)+
stat_compare_means()+
labs(title = each) +
facet_grid(~pronouns_binned)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value, postcode_povertycoded)
p <- df %>%
ggplot()+
aes(
x = postcode_povertycoded,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
#stat_compare_means(comparisons = my_comparisons)+
stat_compare_means(method = "kruskal.test")+
labs(title = each) +
facet_grid(~pronouns_binned)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value, postcode_povertycoded)
p <- df %>%
ggplot()+
aes(
x = gradeyear_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
#stat_compare_means(comparisons = my_comparisons)+
stat_compare_means(method = "kruskal.test")+
labs(title = each) +
facet_grid(~pronouns_binned)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value, gradeyear_binned)
p <- df %>%
ggplot()+
aes(
x = gradeyear_binned,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
#stat_compare_means(comparisons = my_comparisons)+
stat_compare_means(method = "kruskal.test")+
labs(title = each) +
facet_grid(~pronouns_binned)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value, gradeyear_binned)
p <- df %>%
ggplot()+
aes(
x = ethnicity,
y = value
)+
geom_boxplot()+
geom_jitter(width = 0.2)+
#stat_compare_means(comparisons = my_comparisons)+
stat_compare_means(method = "kruskal.test")+
labs(title = each) +
facet_grid(~pronouns_binned)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value, gradeyear_binned)
p <- df %>%
ggplot()+
aes(
x = ethnicity,
y = value
)+
geom_violin()+
geom_jitter(width = 0.2)+
#stat_compare_means(comparisons = my_comparisons)+
stat_compare_means(method = "kruskal.test")+
labs(title = each) +
facet_grid(~pronouns_binned)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
plots <- list()
for (each in variables) {
df <- table_data %>%
drop_na(pronouns_binned)%>%
pivot_longer(cols = variables, names_to = "measure", values_to = "value")%>%
filter(measure == each)%>%
drop_na(value, gradeyear_binned)
p <- df %>%
ggplot()+
aes(
x = pronouns_binned,
y = value
)+
geom_violin()+
geom_jitter(width = 0.2)+
#stat_compare_means(comparisons = my_comparisons)+
stat_compare_means(method = "kruskal.test")+
labs(title = each)
plots[[each]] <- p
# ggsave(here::here("figures", paste0(each, ".jpeg")))
}
plots
